(()=>{var e={};e.id=321,e.ids=[321],e.modules={62849:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=62849,e.exports=r},72934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{"use strict";e.exports=require("assert")},78893:e=>{"use strict";e.exports=require("buffer")},84770:e=>{"use strict";e.exports=require("crypto")},17702:e=>{"use strict";e.exports=require("events")},32615:e=>{"use strict";e.exports=require("http")},35240:e=>{"use strict";e.exports=require("https")},98216:e=>{"use strict";e.exports=require("net")},35816:e=>{"use strict";e.exports=require("process")},86624:e=>{"use strict";e.exports=require("querystring")},76162:e=>{"use strict";e.exports=require("stream")},74026:e=>{"use strict";e.exports=require("string_decoder")},95346:e=>{"use strict";e.exports=require("timers")},82452:e=>{"use strict";e.exports=require("tls")},17360:e=>{"use strict";e.exports=require("url")},21764:e=>{"use strict";e.exports=require("util")},71568:e=>{"use strict";e.exports=require("zlib")},19411:(e,r,s)=>{"use strict";s.r(r),s.d(r,{originalPathname:()=>h,patchFetch:()=>R,requestAsyncStorage:()=>m,routeModule:()=>x,serverHooks:()=>_,staticGenerationAsyncStorage:()=>E});var t={};s.r(t),s.d(t,{GET:()=>l,POST:()=>p});var o=s(49303),a=s(88716),i=s(60670),n=s(87070),u=s(45609),c=s(90455),d=s(9487);async function l(e){try{let e=await (0,u.getServerSession)(c.L);if(!e||!e.user||"admin"!==e.user.role)return n.NextResponse.json({error:"Unauthorized"},{status:401});let[r]=await d.db.execute(`
      SELECT c.*, 
             CONCAT(u.first_name, ' ', u.last_name) as teacher_name,
             COUNT(e.student_id) as enrolled_students
      FROM courses c
      LEFT JOIN users u ON c.teacher_id = u.id
      LEFT JOIN enrollments e ON c.id = e.course_id
      WHERE c.is_active = TRUE
      GROUP BY c.id
      ORDER BY c.created_at DESC
    `);return n.NextResponse.json(r)}catch(e){return console.error("Courses API error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{let r=await (0,u.getServerSession)(c.L);if(!r||!r.user||"admin"!==r.user.role)return n.NextResponse.json({error:"Unauthorized"},{status:401});let{title:s,description:t,course_code:o,teacher_id:a,category:i}=await e.json();if(!s||!o||!a)return n.NextResponse.json({error:"Title, course code, and teacher are required"},{status:400});let[l]=await d.db.execute("SELECT id FROM courses WHERE course_code = ?",[o]);if(l.length>0)return n.NextResponse.json({error:"Course code already exists"},{status:400});let[p]=await d.db.execute("SELECT id FROM users WHERE id = ? AND role IN ('admin', 'teacher')",[a]);if(0===p.length)return n.NextResponse.json({error:"Invalid teacher selected"},{status:400});let[x]=await d.db.execute("INSERT INTO courses (title, description, course_code, teacher_id, category) VALUES (?, ?, ?, ?, ?)",[s,t,o,a,i]);return await d.db.execute("INSERT INTO activity_logs (user_id, action, resource_type, resource_id) VALUES (?, ?, ?, ?)",[r.user.id,"create_course","course",x.insertId]),n.NextResponse.json({message:"Course created successfully"})}catch(e){return console.error("Create course error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let x=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/admin/courses/route",pathname:"/api/admin/courses",filename:"route",bundlePath:"app/api/admin/courses/route"},resolvedPagePath:"C:\\Users\\Asus\\Downloads\\moodle-lms\\app\\api\\admin\\courses\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:E,serverHooks:_}=x,h="/api/admin/courses/route";function R(){return(0,i.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:E})}},90455:(e,r,s)=>{"use strict";s.d(r,{L:()=>n});var t=s(53797),o=s(42023),a=s.n(o),i=s(9487);let n={providers:[(0,t.Z)({name:"credentials",credentials:{username:{label:"Username",type:"text"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.username||!e?.password)return null;try{let[r]=await i.db.execute("SELECT * FROM users WHERE username = ? AND is_active = TRUE",[e.username]),s=r[0];if(!s||!await a().compare(e.password,s.password_hash))return null;return await i.db.execute("INSERT INTO activity_logs (user_id, action, ip_address) VALUES (?, ?, ?)",[s.id,"login","127.0.0.1"]),{id:s.id.toString(),username:s.username,email:s.email,role:s.role,name:`${s.first_name} ${s.last_name}`}}catch(e){return console.error("Auth error:",e),null}}})],callbacks:{jwt:async({token:e,user:r})=>(r&&(e.role=r.role,e.username=r.username),e),session:async({session:e,token:r})=>(r&&(e.user.id=r.sub,e.user.role=r.role,e.user.username=r.username),e)},pages:{signIn:"/login"},session:{strategy:"jwt"}}},9487:(e,r,s)=>{"use strict";s.d(r,{S:()=>i,db:()=>a});var t=s(73785);let o={host:process.env.DB_HOST||"localhost",user:process.env.DB_USER||"root",password:process.env.DB_PASSWORD||"",database:process.env.DB_NAME||"lms_db",waitForConnections:!0,connectionLimit:10,queueLimit:0},a=t.createPool(o);function i(e,r){let s=e?.toLowerCase().includes("safeexambrowser"),t=r["x-safeexambrowser-requesthash"];return s&&!!t}}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,612],()=>s(19411));module.exports=t})();